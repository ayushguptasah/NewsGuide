{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush Gupta\\\\Desktop\\\\Web App\\\\NewsGuide\\\\src\\\\components\\\\News.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewsItem from \"./NewsItem\";\nimport Spinner from \"./Spinner\";\nimport PropTypes from \"prop-types\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst News = props => {\n  _s();\n\n  useState[(articles, setArticles)] = useState([]);\n  useState[(loading, setLoading)] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0); // document.title = `${this.capitalizeFirstLetter(\n  //     props.category\n  //   )} - NewsGuide`;\n\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const updateNews = async () => {\n    props.setProgress(10);\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\n    this.setState({\n      loading: true\n    });\n    let data = await fetch(url);\n    props.setProgress(70);\n    let parsedData = await data.json();\n    props.setProgress(70);\n    setArticles(parsedData.articles);\n    setTotalResults(parsedData.totalResults);\n    setLoading(false);\n    props.setProgress(100);\n  };\n\n  useEffect(() => {\n    this.updateNews();\n  }, []);\n\n  const handlePrevClick = async () => {\n    console.log(\"Previous\");\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page= ${this.state.page - 1}&pageSize=${props.pageSize}`;\n    this.setState({\n      loading: true\n    });\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    console.log(parsedData);\n    this.setState({\n      page: this.state.page - 1,\n      articles: parsedData.articles,\n      loading: false\n    });\n  };\n\n  handleNextClick = async () => {\n    console.log(\"Next\");\n\n    if (!(this.state.page + 1 > Math.ceil(this.state.totalResults / props.pageSize))) {\n      let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page= ${this.state.page + 1}&pageSize=${props.pageSize}`;\n      this.setState({\n        loading: true\n      });\n      let data = await fetch(url);\n      let parsedData = await data.json();\n      this.setState({\n        page: this.state.page + 1,\n        articles: parsedData.articles,\n        loading: false\n      });\n    }\n  };\n\n  fetchMoreData = async () => {\n    this.setState({\n      page: this.state.page + 1\n    });\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page= ${this.state.page}&pageSize=${props.pageSize}`;\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    this.setState({\n      articles: this.state.articles.concat(parsedData.articles),\n      totalResults: parsedData.totalResults,\n      loading: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      style: {\n        margin: \"20px 0px\"\n      },\n      children: [\"NewsGuide - Top \", this.capitalizeFirstLetter(props.category), \" \", \"Headlines\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), this.state.loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: this.state.articles.length,\n      next: this.fetchMoreData,\n      hasMore: this.state.articles.length !== this.state.totalResults,\n      loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: this.state.articles.map(element => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(NewsItem, {\n                title: element.title ? element.title : \"\",\n                description: element.description ? element.description : \"\",\n                imageUrl: element.urlToImage,\n                newsUrl: element.url,\n                author: element.author,\n                date: element.publishedAt,\n                source: element.source.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 21\n              }, this)\n            }, element.url, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(News, \"EFD+lzYfV1dEDKy3QGUKoE6eKjQ=\");\n\n_c = News;\nNews.defaultProps = {\n  country: \"in\",\n  pageSize: 8,\n  category: \"general\"\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["C:/Users/Ayush Gupta/Desktop/Web App/NewsGuide/src/components/News.js"],"names":["React","useEffect","useState","NewsItem","Spinner","PropTypes","InfiniteScroll","News","props","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","capitalizeFirstLetter","string","charAt","toUpperCase","slice","updateNews","setProgress","url","country","category","apiKey","pageSize","setState","data","fetch","parsedData","json","handlePrevClick","console","log","state","handleNextClick","Math","ceil","fetchMoreData","concat","margin","length","map","element","title","description","urlToImage","author","publishedAt","source","name","defaultProps","propTypes","number"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NewsItem from \"./NewsItem\";\r\nimport Spinner from \"./Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst News = (props)=> {\r\n  useState [articles, setArticles] = useState([])\r\n  useState [loading, setLoading] = useState(true)\r\n  const [page, setPage] = useState(1)\r\n  const [totalResults, setTotalResults] = useState(0)\r\n  // document.title = `${this.capitalizeFirstLetter(\r\n  //     props.category\r\n  //   )} - NewsGuide`;\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n\r\n  const updateNews = async ()=> {\r\n    props.setProgress(10);\r\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\r\n    this.setState({ loading: true });\r\n    let data = await fetch(url);\r\n    props.setProgress(70);\r\n    let parsedData = await data.json();\r\n    props.setProgress(70);\r\n    setArticles(parsedData.articles)\r\n    setTotalResults(parsedData.totalResults)\r\n    setLoading(false)\r\n    props.setProgress(100);\r\n  }\r\n\r\n  useEffect(() => {\r\n    this.updateNews();\r\n  }, [])\r\n\r\n  const handlePrevClick = async () => {\r\n    console.log(\"Previous\");\r\n    let url = `https://newsapi.org/v2/top-headlines?country=${\r\n      props.country\r\n    }&category=${props.category}&apiKey=${props.apiKey}&page= ${\r\n      this.state.page - 1\r\n    }&pageSize=${props.pageSize}`;\r\n    this.setState({ loading: true });\r\n    let data = await fetch(url);\r\n    let parsedData = await data.json();\r\n    console.log(parsedData);\r\n    this.setState({\r\n      page: this.state.page - 1,\r\n      articles: parsedData.articles,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  handleNextClick = async () => {\r\n    console.log(\"Next\");\r\n    if (\r\n      !(\r\n        this.state.page + 1 >\r\n        Math.ceil(this.state.totalResults / props.pageSize)\r\n      )\r\n    ) {\r\n      let url = `https://newsapi.org/v2/top-headlines?country=${\r\n        props.country\r\n      }&category=${props.category}&apiKey=${props.apiKey}&page= ${\r\n        this.state.page + 1\r\n      }&pageSize=${props.pageSize}`;\r\n      this.setState({ loading: true });\r\n      let data = await fetch(url);\r\n      let parsedData = await data.json();\r\n      this.setState({\r\n        page: this.state.page + 1,\r\n        articles: parsedData.articles,\r\n        loading: false,\r\n      });\r\n    }\r\n  };\r\n  fetchMoreData = async () => {\r\n    this.setState({ page: this.state.page + 1 });\r\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page= ${this.state.page}&pageSize=${props.pageSize}`;\r\n    let data = await fetch(url);\r\n    let parsedData = await data.json();\r\n    this.setState({\r\n      articles: this.state.articles.concat(parsedData.articles),\r\n      totalResults: parsedData.totalResults,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  \r\n    return (\r\n      <>\r\n        <h1 className=\"text-center\" style={{ margin: \"20px 0px\" }}>\r\n          NewsGuide - Top {this.capitalizeFirstLetter(props.category)}{\" \"}\r\n          Headlines\r\n        </h1>\r\n        {this.state.loading && <Spinner />}\r\n        <InfiniteScroll\r\n          dataLength={this.state.articles.length}\r\n          next={this.fetchMoreData}\r\n          hasMore={this.state.articles.length !== this.state.totalResults}\r\n          loader={<Spinner />}\r\n        >\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              {this.state.articles.map((element) => {\r\n                return (\r\n                  <div className=\"col-md-4\" key={element.url}>\r\n                    <NewsItem\r\n                      title={element.title ? element.title : \"\"}\r\n                      description={\r\n                        element.description ? element.description : \"\"\r\n                      }\r\n                      imageUrl={element.urlToImage}\r\n                      newsUrl={element.url}\r\n                      author={element.author}\r\n                      date={element.publishedAt}\r\n                      source={element.source.name}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </InfiniteScroll>\r\n      </>\r\n    );\r\n\r\n}\r\n\r\n\r\nNews.defaultProps = {\r\n    country: \"in\",\r\n    pageSize: 8,\r\n    category: \"general\",\r\n  };\r\n\r\n  News.propTypes = {\r\n    country: PropTypes.string,\r\n    pageSize: PropTypes.number,\r\n    category: PropTypes.string,\r\n  };\r\nexport default News;\r\n"]},"metadata":{},"sourceType":"module"}