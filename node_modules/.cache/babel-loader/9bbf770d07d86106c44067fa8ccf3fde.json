{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush Gupta\\\\Desktop\\\\Web App\\\\NewsGuide\\\\src\\\\components\\\\News.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport NewsItem from \"./NewsItem\";\nimport Spinner from \"./Spinner\";\nimport PropTypes from \"prop-types\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst News = props => {\n  _s();\n\n  useState[(articles, setArticles)] = useState([]);\n  useState[(loading, setLoading)] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(0); // document.title = `${this.capitalizeFirstLetter(\n  //     props.category\n  //   )} - NewsGuide`;\n\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  const updateNews = async () => {\n    props.setProgress(10);\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\n    setLoading(true);\n    let data = await fetch(url);\n    props.setProgress(70);\n    let parsedData = await data.json();\n    props.setProgress(70);\n    setArticles(parsedData.articles);\n    setTotalResults(parsedData.totalResults);\n    setLoading(false);\n    props.setProgress(100);\n  };\n\n  useEffect(() => {\n    updateNews();\n  }, []);\n\n  const handlePrevClick = async () => {\n    setPage(page - 1);\n    updateNews();\n  };\n\n  const handleNextClick = async () => {\n    setPage(page + 1);\n    updateNews();\n  };\n\n  fetchMoreData = async () => {\n    this.setState({\n      page: this.state.page + 1\n    });\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page= ${this.state.page}&pageSize=${props.pageSize}`;\n    let data = await fetch(url);\n    let parsedData = await data.json();\n    setArticles(articles.concat(parsedData.articles));\n    setTotalResults();\n    this.setState({\n      articles: articles.concat(parsedData.articles),\n      totalResults: parsedData.totalResults,\n      loading: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      style: {\n        margin: \"20px 0px\"\n      },\n      children: [\"NewsGuide - Top \", this.capitalizeFirstLetter(props.category), \" Headlines\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), this.state.loading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: this.state.articles.length,\n      next: this.fetchMoreData,\n      hasMore: this.state.articles.length !== this.state.totalResults,\n      loader: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: this.state.articles.map(element => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-4\",\n              children: /*#__PURE__*/_jsxDEV(NewsItem, {\n                title: element.title ? element.title : \"\",\n                description: element.description ? element.description : \"\",\n                imageUrl: element.urlToImage,\n                newsUrl: element.url,\n                author: element.author,\n                date: element.publishedAt,\n                source: element.source.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this)\n            }, element.url, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(News, \"EFD+lzYfV1dEDKy3QGUKoE6eKjQ=\");\n\n_c = News;\nNews.defaultProps = {\n  country: \"in\",\n  pageSize: 8,\n  category: \"general\"\n};\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["C:/Users/Ayush Gupta/Desktop/Web App/NewsGuide/src/components/News.js"],"names":["React","useEffect","useState","NewsItem","Spinner","PropTypes","InfiniteScroll","News","props","articles","setArticles","loading","setLoading","page","setPage","totalResults","setTotalResults","capitalizeFirstLetter","string","charAt","toUpperCase","slice","updateNews","setProgress","url","country","category","apiKey","pageSize","data","fetch","parsedData","json","handlePrevClick","handleNextClick","fetchMoreData","setState","state","concat","margin","length","map","element","title","description","urlToImage","author","publishedAt","source","name","defaultProps","propTypes","number"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport NewsItem from \"./NewsItem\";\r\nimport Spinner from \"./Spinner\";\r\nimport PropTypes from \"prop-types\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nconst News = (props) => {\r\n  useState[(articles, setArticles)] = useState([]);\r\n  useState[(loading, setLoading)] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [totalResults, setTotalResults] = useState(0);\r\n  // document.title = `${this.capitalizeFirstLetter(\r\n  //     props.category\r\n  //   )} - NewsGuide`;\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  const updateNews = async () => {\r\n    props.setProgress(10);\r\n    let url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page=${page}&pageSize=${props.pageSize}`;\r\n    setLoading(true);\r\n    let data = await fetch(url);\r\n    props.setProgress(70);\r\n    let parsedData = await data.json();\r\n    props.setProgress(70);\r\n    setArticles(parsedData.articles);\r\n    setTotalResults(parsedData.totalResults);\r\n    setLoading(false);\r\n    props.setProgress(100);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateNews();\r\n  }, []);\r\n\r\n  const handlePrevClick = async () => {\r\n    setPage(page-1)\r\n    updateNews();\r\n  };\r\n\r\n  const handleNextClick = async () => {\r\n    setPage(page+1)\r\n    updateNews();\r\n  };\r\n\r\n  fetchMoreData = async () => {\r\n    this.setState({ page: this.state.page + 1 });\r\n    const url = `https://newsapi.org/v2/top-headlines?country=${props.country}&category=${props.category}&apiKey=${props.apiKey}&page= ${this.state.page}&pageSize=${props.pageSize}`;\r\n    let data = await fetch(url);\r\n    let parsedData = await data.json();\r\n    setArticles(articles.concat(parsedData.articles));\r\n    setTotalResults()\r\n    this.setState({\r\n      articles: articles.concat(parsedData.articles),\r\n      totalResults: parsedData.totalResults,\r\n      loading: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center\" style={{ margin: \"20px 0px\" }}>\r\n        NewsGuide - Top {this.capitalizeFirstLetter(props.category)} Headlines\r\n      </h1>\r\n      {this.state.loading && <Spinner />}\r\n      <InfiniteScroll\r\n        dataLength={this.state.articles.length}\r\n        next={this.fetchMoreData}\r\n        hasMore={this.state.articles.length !== this.state.totalResults}\r\n        loader={<Spinner />}\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {this.state.articles.map((element) => {\r\n              return (\r\n                <div className=\"col-md-4\" key={element.url}>\r\n                  <NewsItem\r\n                    title={element.title ? element.title : \"\"}\r\n                    description={element.description ? element.description : \"\"}\r\n                    imageUrl={element.urlToImage}\r\n                    newsUrl={element.url}\r\n                    author={element.author}\r\n                    date={element.publishedAt}\r\n                    source={element.source.name}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </InfiniteScroll>\r\n    </>\r\n  );\r\n};\r\n\r\nNews.defaultProps = {\r\n  country: \"in\",\r\n  pageSize: 8,\r\n  category: \"general\",\r\n};\r\n\r\nNews.propTypes = {\r\n  country: PropTypes.string,\r\n  pageSize: PropTypes.number,\r\n  category: PropTypes.string,\r\n};\r\nexport default News;\r\n"]},"metadata":{},"sourceType":"module"}